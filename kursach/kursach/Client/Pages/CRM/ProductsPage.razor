@page "/companies/{companyId}/crm/products"
@inject HttpClient client
@inject NavigationManager NM
@layout CRMLayout
@using Newtonsoft.Json;


<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Товары</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <button type="button" class="btn btn-sm btn-outline-secondary" @onclick="@((e) => NM.NavigateTo($"{NM.Uri}/new"))">Добавить</button>
        </div>
        <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle">
            <span data-feather="calendar"></span>
            Выводить по
        </button>
    </div>
</div>

<div class="d-flex flex-column align-items-center">
    <table class="table table-hover">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Название</th>
                <th scope="col">Кол-во</th>
                <th scope="col">Цена</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>


            @foreach (var product in Products)
            {
                <ProductRow ProductData="product" Index="Products.IndexOf(product) + 1"/>
            }
        </tbody>
    </table>
    @if (!fetchComplete)
    {
        <img width="100" src="Spinner.svg" />
    }
</div>


@code {
    [Parameter]
    public string CompanyId { get; set; }

    public List<Product> Products { get; set; } = new List<Product>();

    private bool fetchComplete = false;

    protected override async Task OnInitializedAsync()
    {
        string response = await client.GetStringAsync($"api/companies/{CompanyId}/products");
        Console.WriteLine(response);
        Products = JsonConvert.DeserializeObject<List<Product>>(response);
        Products = Products.OrderByDescending(p => p.CreationDate).ToList();
        fetchComplete = true;
        StateHasChanged();
    }
}
